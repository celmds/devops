name: CI DevOps 2025

# Ce workflow est déclenché sur push vers main ou develop, ainsi que sur pull requests
on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  # 1er job : tests backend
  test-backend:
    runs-on: ubuntu-24.04

    steps:
      # Checkout du code
      - uses: actions/checkout@v4

      # Configuration de JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      # Build + tests Maven
      - name: Build and test with Maven
        working-directory: TP1/tp-postgres/simpleapi
        run: mvn clean verify

  # 2e job : analyse SonarCloud
  sonar-analysis:
    needs: test-backend
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Sonar packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        working-directory: TP1/tp-postgres/simpleapi
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=celmds_devops -Dsonar.organization=celmds1 -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}  --file ./pom.xml


  # 3e job : build et push Docker (uniquement si branche main)
  build-and-push-docker-image:
    needs: [test-backend, sonar-analysis]
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build image and push backend
        uses: docker/build-push-action@v6
        with:
          context: TP1/tp-postgres/simpleapi
          tags: ${{ secrets.DOCKER_USERNAME }}/tp-devops-simple-api:latest
          push: true

      - name: Build image and push database
        uses: docker/build-push-action@v6
        with:
          context: TP1/tp-postgres/init-db
          tags: ${{ secrets.DOCKER_USERNAME }}/tp-devops-simple-db:latest
          push: true

      - name: Build image and push httpd
        uses: docker/build-push-action@v6
        with:
          context: TP1/tp-postgres/HTTP-server
          tags: ${{ secrets.DOCKER_USERNAME }}/tp-devops-simple-httpd:latest
          push: true
